{"tools":[{"id":"88","name":"Apiary API Blueprint","summary":"API Blueprint is lightweight, documentation oriented domain specific language (DSL) for easily designing, building and documenting REST API.API Blueprint is a Markdown.It is easy to learn and read, perfect for comprehensive documentation but also for quick prototyping and collaboration.","details":"API Blueprint is lightweight, documentation oriented domain specific language (DSL) for easily designing, building and documenting REST API.API Blueprint is a Markdown.It is easy to learn and read, perfect for comprehensive documentation but also for quick prototyping and collaboration.","website":"https:\/\/github.com\/apiaryio\/api-blueprint","logo":"http:\/\/kinlane-productions.s3.amazonaws.com\/api-evangelist-site\/tools\/apiary-io-logo.png","tags":"API-Design"},{"id":"87","name":"Apiary Blueprint Parser","summary":"A JavaScript parser ofApiary API blueprints. Uses Node.js then in browser, include the browser version of the parser in your web page or application using the &lt;script&gt; tag. To parse an API blueprint, just call the parse method and pass the blueprint as a parameter. The method will return an object representing the parsed blueprint or throw an exception if the input is invalid.","details":"A JavaScript parser ofApiary API blueprints. Uses Node.js then in browser, include the browser version of the parser in your web page or application using the &lt;script&gt; tag. To parse an API blueprint, just call the parse method and pass the blueprint as a parameter. The method will return an object representing the parsed blueprint or throw an exception if the input is invalid.","website":"https:\/\/github.com\/apiaryio\/blueprint-parser","logo":"http:\/\/kinlane-productions.s3.amazonaws.com\/api-evangelist-site\/tools\/apiary-io-logo.png","tags":"API-Design"},{"id":"89","name":"Enunciate","summary":"Enunciate is an engine for dramatically enhancing your Java Web service API. It's simple. You develop your Web service API using standard Java technologies and attach Enunciate to your build process. Suddenly, your Web service API is boasting some pretty impressive features. Enunciate is an open-source project, licenced under the Apache License, version 2.0.Provides ull HTML documentation of your ","details":"Enunciate is an engine for dramatically enhancing your Java Web service API. It's simple. You develop your Web service API using standard Java technologies and attach Enunciate to your build process. Suddenly, your Web service API is boasting some pretty impressive features. Enunciate is an open-source project, licenced under the Apache License, version 2.0.Provides ull HTML documentation of your services, scraped from your JavaDocs. Client-side libraries (e.g. Java, .NET, iPhone, Ruby, Flex, AJAX, GWT, etc.) for developers who want to interface with your API, as well as interface Definition Documents (e.g. WSDL, WADL, XML-Schema, etc.)","website":"http:\/\/enunciate.codehaus.org\/","logo":"http:\/\/kinlane-productions.s3.amazonaws.com\/api-evangelist-site\/blog\/enunciate-logo.png","tags":"API-Design"},{"id":"69","name":"I\/O Docs","summary":"I\/O Docs is a live interactive documentation system for RESTful web APIs. By defining APIs at the resource, method and parameter levels in a JSON schema, I\/O Docs will generate a JavaScript client interface. API calls can be executed from this interface, which are then proxied through the I\/O Docs server with payload data cleanly formatted (pretty-printed if JSON or XML).","details":"I\/O Docs is a live interactive documentation system for RESTful web APIs. By defining APIs at the resource, method and parameter levels in a JSON schema, I\/O Docs will generate a JavaScript client interface. API calls can be executed from this interface, which are then proxied through the I\/O Docs server with payload data cleanly formatted (pretty-printed if JSON or XML).","website":"https:\/\/github.com\/mashery\/iodocs","logo":"http:\/\/kinlane-productions.s3.amazonaws.com\/api-evangelist-site\/blog\/io-docs-logo.jpg","tags":"API Design,API Discovery,API Management,API-Design,Documentation,Interactive Documentation"},{"id":"74","name":"Swagger Core","summary":"Swagger is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services. The overarching goal of Swagger is to enable client and documentation systems to update at the same pace as the server. The documentation of methods, parameters and models can be tightly integrated into the server code, allowing APIs to always stay in sync.","details":"Swagger is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services. The overarching goal of Swagger is to enable client and documentation systems to update at the same pace as the server. The documentation of methods, parameters and models can be tightly integrated into the server code, allowing APIs to always stay in sync.","website":"https:\/\/github.com\/wordnik\/swagger-core\/wiki","logo":"http:\/\/kinlane-productions.s3.amazonaws.com\/api-evangelist-site\/tools\/swagger-logo-green.png","tags":"API Design,API Discovery,API-Design,API-Discovery"}],"published":"11\/09\/2013"}